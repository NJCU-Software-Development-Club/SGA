/* 
*  TABLE OF CONTENTS
*   
*  1.0 - Fonts
*  2.0 - Design Tokens - Typescale, Color Theme, Fonts, Tracking, Gutter, etc... 
*  To Update As Needed...
*/

/* ------------------------------
   ------------------------------
   1. FONTS
   ------------------------------
   ------------------------------ */

@import url('https://fonts.googleapis.com/css2?family=Alef&family=Lobster&family=Tenor+Sans&display=swap');

/* ------------------------------
   ------------------------------
   2. Design Tokens
   ------------------------------
   ------------------------------ */

:root {
    /* Our Modular Scales: https://utopia.fyi/ */

    /* Step -10: 1.93px → 3.44px */
    --s--10: clamp(0.1206rem, 0.1081rem + 0.0668vw, 0.215rem);

    /* Step -9: 2.42px → 4.29px */
    --s--9: clamp(0.1513rem, 0.1357rem + 0.0827vw, 0.2681rem);

    /* Step -8: 3.02px → 5.37px */
    --s--8: clamp(0.1888rem, 0.1693rem + 0.104vw, 0.3356rem);

    /* Step -7: 3.77px → 6.71px */
    --s--7: clamp(0.2356rem, 0.2112rem + 0.1301vw, 0.4194rem);

    /* Step -6: 4.72px → 8.39px */
    --s--6: clamp(0.295rem, 0.2646rem + 0.1624vw, 0.5244rem);

    /* Step -5: 5.90px → 10.49px */
    --s--5: clamp(0.3688rem, 0.3307rem + 0.2031vw, 0.6556rem);

    /* Step -4: 7.37px → 13.11px */
    --s--4: clamp(0.4606rem, 0.413rem + 0.254vw, 0.8194rem);

    /* Step -3: 9.22px → 16.38px */
    --s--3: clamp(0.5763rem, 0.5168rem + 0.3168vw, 1.0238rem);

    /* Step -2: 11.52px → 20.48px */
    --s--2: clamp(0.72rem, 0.6457rem + 0.3965vw, 1.28rem);

    /* Step -1: 14.40px → 25.60px */
    --s--1: clamp(0.9rem, 0.8071rem + 0.4956vw, 1.6rem);

    /* Step 0: 18.00px → 32.00px */
    --s0: clamp(1.125rem, 1.0088rem + 0.6195vw, 2rem);

    /* Step 1: 22.50px → 40.00px */
    --s1: clamp(1.4063rem, 1.2611rem + 0.7743vw, 2.5rem);

    /* Step 2: 28.13px → 50.00px */
    --s2: clamp(1.7581rem, 1.5767rem + 0.9677vw, 3.125rem);

    /* Step 3: 35.16px → 62.50px */
    --s3: clamp(2.1975rem, 1.9707rem + 1.2097vw, 3.9063rem);

    /* Step 4: 43.95px → 78.13px */
    --s4: clamp(2.7469rem, 2.4633rem + 1.5124vw, 4.8831rem);

    /* Step 5: 54.93px → 97.66px */
    --s5: clamp(3.4331rem, 3.0786rem + 1.8907vw, 6.1038rem);

    /* Step 6: 68.66px → 122.07px */
    --s6: clamp(4.2913rem, 3.8481rem + 2.3633vw, 7.6294rem);

    /* Step 7: 85.83px → 152.59px */
    --s7: clamp(5.3644rem, 4.8105rem + 2.954vw, 9.5369rem);

    /* Step 8: 107.29px → 190.73px */
    --s8: clamp(6.7056rem, 6.0134rem + 3.692vw, 11.9206rem);

    /* Step 9: 134.11px → 238.42px */
    --s9: clamp(8.3819rem, 7.5165rem + 4.6155vw, 14.9013rem);

    /* Step 10: 167.64px → 298.02px */
    --s10: clamp(10.4775rem, 9.3958rem + 5.769vw, 18.6263rem);

    /* Headings */
    --font-serif: 'Tenor Sans', sans-serif;
    /* Paragraphs */
    --font-base: 'Alef', sans-serif;
    /* Emphasized Text */
    --font-emphasis: 'Lobster', sans-serif;

    /* The maximum width of an element in characters, this is equal to the width of an "X" */
    --measure: 60ch;
    /* Thickness of a thin border */
    --border-thin: var(--s0);
    /* Spacing between elements */
    --gutter: var(--s0);
    /* Radius of the border corners */
    --border-radius: 8px;
    /* letter spacing for normal text */
    --tracking: -0.05ch;
    /* letter spacing for headers */
    --tracking-s: -0.075ch;

    --vanilla: #F1F7ED;
    --green: #686850;
    --highlight: #F2B792;
    --dark-grey: #666666;
}

* {
    max-inline-size: var(--measure);
}

html,
body,
div,
header,
article,
nav,
main,
footer {
    max-inline-size: none;
}

a {
    text-decoration: none;
    color: var(--TO_EDIT);
}

/* ------------------------------
   ------------------------------
   3. BODY
   ------------------------------
   ------------------------------ */

body {
    font-family: var(--font-base);
    font-size: var(--s0);
    letter-spacing: var(--tracking);
    line-height: 1.4;

    color: var(--text);

    background-color: var(--body-background);
}

/* ------------------------------
   ------------------------------
   4. HEADERS
   ------------------------------
   ------------------------------ */

h1,
h2,
h3 {
    /* Limits the width of the headings and prevents them from becoming too long */
    max-width: 18ch;
}

h1,
h2,
h3 {
    font-family: var(--font-serif);
    letter-spacing: var(--tracking-s);
    line-height: 1;
}

h1 {
    font-size: var(--s5);
}

h2 {
    font-size: var(--s4);
}

h3 {
    font-size: var(--s3);
}

span,
em {
    font-family: var(--font-emphasis);
}

blockquote:not([className]),
li,
p {
    /* Helps to limit the width to improve readability */
    max-width: 50ch;
    list-style: none;
}

/* ------------------------------
   ------------------------------
   5. CLASSES
   ------------------------------
   ------------------------------ */


.squeeze {
    /* Width and Height should include only the content inside it, excluding padding and border */
    box-sizing: content-box;

    /* limits the element to take up 80 characters horizontally */
    max-inline-size: 80ch;

    /* centers the element horizontally by setting the left and right margins to "auto" */
    margin-inline: auto;

    /* horizontal padding */
    padding-inline: var(--s0);
}

.group {
    /* switch to inline */
    display: flex;

    /* elements can drop down to be next to each other if there isnt enough space */
    flex-wrap: wrap;

    /* the spacing between the elements grouped together */
    gap: var(--s5, 1rem);

    /* center elements horizontally */
    justify-content: center;

    /* center elements vertically */
    align-items: center;
}

.stack {
    display: flex;

    /* Sets the direction of the flex items to be stacked vertically */
    flex-direction: column;

    /* Aligns the flex items to the start of the container vertically */
    justify-content: flex-start;
}

.stack > * {
    /* Sets the margin on the block levels (vertical axis) of all direct child elements to 0 */
    /* We do this to have finer control with our next pseudo selector */
    margin-block: 0;
}

.stack > * + * {
    /* Sets spacing between elements vertically in between each other. 
        The first value is the default (--s0, the 2nd is a fallback) */
    margin-block-start: var(--s0, 1.5rem);
}

/* a flex container. it uses a threshold value and applies flex-grow and flex-basis to the child elements. It will "switch" to be vertical if the element grows bigger than the threshold */
.switcher {
    display: flex;
    flex-wrap: wrap;
    gap: var(--gutter, var(--s1));
    --threshold: 110rem;
}

/* allows the children of switcher class to grow forever */
.switcher > * {
    flex-grow: 1;
    flex-basis: calc((var(--threshold) - 100%) * 999);
}

/* A way to "break" into a vertical layout if there are more than 4 elements */
.switcher> :nth-last-child(n+5),
.switcher> :nth-last-child(n+5)~* {
    flex-basis: 100%;
}

.cover {
    --space: var(--s1);
    display: flex;
    flex-direction: column;
    /* The vh unit is the percentage of viewport height, 100vh means that the full viewport height will covered */
    min-block-size: 100vh;
    padding: var(--s0);
}

.cover > * {
    margin-block: var(--s1);
}

.cover > :first-child:not(h1) {
    margin-block-start: 0;
}

.cover > :last-child:not(h1) {
    margin-block-end: 0;
}

.cover > * {
    margin-block: auto;
}

.frame {
    --n: NUMBER;
    /* numerator 16*/
    --d: NUMBER;
    /* denominator 9*/
    aspect-ratio: var(--n) / var(--d);
    /* If the content inside the .frame container exceeds its dimensions, it will be clipped and hidden from view */
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
}

.frame>img,
.frame>video {
    /* the properies below make the image fit inside the container */
    inline-size: 100%;
    block-size: 100%;
    object-fit: cover;

    border-radius: var(--border-radius);
}

.grid {
    /* grid context */
    display: grid;
    grid-gap: 1rem;
    /* minimum column width */
    --minimum: 20ch;
}

@supports (width: min(var(--minimum), 100%)) {
    .grid {
        /* min() function enhancement
        into multiple columns */
        grid-template-columns: repeat(auto-fit, minmax(min(var(--minimum), 100%),
                    1fr));
    }
}